--BEGIN TRANSACTION;

DROP TABLE IF EXISTS AddressObjects_temp;
DROP TABLE IF EXISTS DeletedAddressObjects_temp;

CREATE TABLE AddressObjects_temp AS SELECT * FROM AddressObjects WHERE AOID IS NULL;
CREATE TABLE DeletedAddressObjects_temp AS SELECT * FROM AddressObjects WHERE AOID IS NULL;

\COPY  AddressObjects_temp(ACTSTATUS,AOGUID,AOID,AOLEVEL,AREACODE,AUTOCODE,CENTSTATUS,CITYCODE,CODE,CURRSTATUS,ENDDATE,FORMALNAME,IFNSFL,IFNSUL,NEXTID,OFFNAME,OKATO,OKTMO,OPERSTATUS,PARENTGUID,PLACECODE,PLAINCODE,POSTALCODE,PREVID,REGIONCODE,SHORTNAME,STARTDATE,STREETCODE,TERRIFNSFL,TERRIFNSUL,UPDATEDATE,CTARCODE,EXTRCODE,SEXTCODE,LIVESTATUS,NORMDOC,PLANCODE,CADNUM,DIVTYPE) FROM '/home/prots/fias/dbf/addr.csv' WITH (FORMAT csv,DELIMITER ',', ENCODING 'UTF8');

--ALTER TABLE IF EXISTS AddressObjects DROP CONSTRAINT IF EXISTS  fk_AddressObjects_AddressObjects_PREVID;
--ALTER TABLE IF EXISTS AddressObjects DROP CONSTRAINT IF EXISTS  fk_AddressObjects_AddressObjects_NEXTID;

UPDATE AddressObjects ao SET ACTSTATUS=t.ACTSTATUS,
        AOGUID=t.AOGUID,
        AOLEVEL=t.AOLEVEL,
        AREACODE=t.AREACODE,
        AUTOCODE=t.AUTOCODE,
        CENTSTATUS=t.CENTSTATUS,
        CITYCODE=t.CITYCODE,
        CODE=t.CODE,
        CURRSTATUS=t.CURRSTATUS,
        ENDDATE=t.ENDDATE,
        FORMALNAME=t.FORMALNAME,
        IFNSFL=t.IFNSFL,
        IFNSUL=t.IFNSUL,
        NEXTID=t.NEXTID,
        OFFNAME=t.OFFNAME,
        OKATO=t.OKATO,
        OKTMO=t.OKTMO,
        OPERSTATUS=t.OPERSTATUS,
        PARENTGUID=t.PARENTGUID,
        PLACECODE=t.PLACECODE,
        PLAINCODE=t.PLAINCODE,
        POSTALCODE=t.POSTALCODE,
        PREVID=t.PREVID,
        REGIONCODE=t.REGIONCODE,
        SHORTNAME=t.SHORTNAME,
        STARTDATE=t.STARTDATE,
        STREETCODE=t.STREETCODE,
        TERRIFNSFL=t.TERRIFNSFL,
        TERRIFNSUL=t.TERRIFNSUL,
        UPDATEDATE=t.UPDATEDATE,
        CTARCODE=t.CTARCODE,
        EXTRCODE=t.EXTRCODE,
        SEXTCODE=t.SEXTCODE,
        LIVESTATUS=t.LIVESTATUS,
        NORMDOC=t.NORMDOC
               FROM AddressObjects dao
      INNER JOIN AddressObjects_temp t ON dao.AOID=t.AOID
               WHERE ao.AOID=dao.AOID;

DELETE FROM AddressObjects ao WHERE EXISTS(SELECT 1 FROM 
DeletedAddressObjects_Temp delao WHERE delao.AOID=ao.AOID);


INSERT INTO AddressObjects
   (ACTSTATUS,AOGUID,AOID,AOLEVEL,AREACODE,AUTOCODE,CENTSTATUS,CITYCODE,CODE,
    CURRSTATUS,ENDDATE,FORMALNAME,IFNSFL,IFNSUL,NEXTID,OFFNAME,OKATO,OKTMO,OPERSTATUS,
    PARENTGUID,PLACECODE,PLAINCODE,POSTALCODE,PREVID,REGIONCODE,SHORTNAME,STARTDATE,STREETCODE,
    TERRIFNSFL,TERRIFNSUL,UPDATEDATE,CTARCODE,EXTRCODE,SEXTCODE,
    LIVESTATUS,NORMDOC,PLANCODE,CADNUM,DIVTYPE) 
SELECT ACTSTATUS,AOGUID,AOID,AOLEVEL,AREACODE,AUTOCODE,CENTSTATUS,CITYCODE,CODE,
    CURRSTATUS,ENDDATE,FORMALNAME,IFNSFL,IFNSUL,NEXTID,OFFNAME,OKATO,OKTMO,OPERSTATUS,
    PARENTGUID,PLACECODE,PLAINCODE,POSTALCODE,PREVID,REGIONCODE,SHORTNAME,STARTDATE,STREETCODE,
    TERRIFNSFL,TERRIFNSUL,UPDATEDATE,CTARCODE,EXTRCODE,SEXTCODE,
    LIVESTATUS,NORMDOC,PLANCODE,CADNUM,DIVTYPE 
   FROM AddressObjects_temp t
   WHERE NOT EXISTS(SELECT * FROM AddressObjects ao 
                                 WHERE ao.AOID=t.AOID)
   ORDER BY CODE;

UPDATE AddressObjects ao SET NEXTID=NULL  
   WHERE ao.NEXTID IS NOT NULL AND NOT EXISTS(SELECT * FROM AddressObjects nao
                                WHERE nao.AOID=ao.NEXTID);  
UPDATE AddressObjects ao SET PREVID=NULL  
   WHERE ao.PREVID IS NOT NULL AND NOT EXISTS(SELECT * FROM AddressObjects pao
                                WHERE pao.AOID=ao.PREVID);  

--ALTER TABLE AddressObjects 
--     ADD  CONSTRAINT fk_AddressObjects_AddressObjects_PREVID FOREIGN KEY(PREVID)
--            REFERENCES AddressObjects (AOID);
--ALTER TABLE AddressObjects
--    ADD  CONSTRAINT fk_AddressObjects_AddressObjects_NEXTID FOREIGN KEY(NEXTID)
--            REFERENCES AddressObjects (AOID);


DROP TABLE IF EXISTS AddressObjects_temp;
DROP TABLE IF EXISTS DeletedAddressObjects_temp;
--ROLLBACK TRANSACTION;
--COMMIT TRANSACTION;
SELECT COUNT(*) FROM AddressObjects;